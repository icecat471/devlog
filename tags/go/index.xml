<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on icecat471&#39;s Devlog</title>
    <link>https://icecat471.github.io/devlog/tags/go/</link>
    <description>Recent content in go on icecat471&#39;s Devlog</description>
    <image>
      <url>https://icecat471.github.io/devlog/papermod-cover.png</url>
      <link>https://icecat471.github.io/devlog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 13 Apr 2021 22:13:26 +0900</lastBuildDate><atom:link href="https://icecat471.github.io/devlog/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go언어 defer와 panic</title>
      <link>https://icecat471.github.io/devlog/post/golang/defer_and_panic/</link>
      <pubDate>Tue, 13 Apr 2021 22:13:26 +0900</pubDate>
      
      <guid>https://icecat471.github.io/devlog/post/golang/defer_and_panic/</guid>
      <description>출처: 예제로 배우는 Go 프로그래밍
1. defer 특정 문장 혹은 함수를 defer를 호출하는 함수가 return하기 직전에 실행하게 한다.
package main import &amp;#34;os&amp;#34; func main() { f, err := os.Open(&amp;#34;1.txt&amp;#34;) if err != nil { panic(err) } // main 마지막에 파일 close 실행  defer f.Close() // 파일 읽기  bytes := make([]byte, 1024) f.Read(bytes) println(len(bytes)) } 
2. panic 함수를 즉시 멈추고 defer를 모두 실행한 뒤 즉시 리턴.
이것은 콜스택을 따라 상위함수에도 모두 적용.</description>
    </item>
    
    <item>
      <title>Go언어 flag 패키지를 통한 command-line flag 파싱</title>
      <link>https://icecat471.github.io/devlog/post/golang/flag/</link>
      <pubDate>Mon, 12 Apr 2021 23:18:41 +0900</pubDate>
      
      <guid>https://icecat471.github.io/devlog/post/golang/flag/</guid>
      <description>golang flag package
command-line flag를 파싱해주는 패키지.
// flag값에 저장된 int64변수의 주소값 반환 maxValue := flag.Int64(&amp;#34;max&amp;#34;, 10, &amp;#34;Defines maximum value&amp;#34;) /* xxxVar() 함수는 반환값이 없고 첫번째 인자로 변수의 포인터를 넘겨주면 변수에 값을 할당해줌. */ var minValue int64 flag.Int64Var(&amp;amp;minValue, &amp;#34;min&amp;#34;, 0, &amp;#34;Defines minimum value&amp;#34;) // flag에 command-line 파싱 // 꼭 호출해주어야 함 flag.Parse() 
Boolean flag는 0, 1, t, f, T, F, true, false, TRUE, FALSE, True, False 등으로 넘겨줄 수 있음.</description>
    </item>
    
    <item>
      <title>Go언어 프로젝트 외부의 모듈 import하기</title>
      <link>https://icecat471.github.io/devlog/post/golang/external_module/</link>
      <pubDate>Mon, 12 Apr 2021 22:14:23 +0900</pubDate>
      
      <guid>https://icecat471.github.io/devlog/post/golang/external_module/</guid>
      <description>go.mod 파일에서
require ( &amp;lt;모듈명&amp;gt; v0.0.0 ) replace &amp;lt;모듈명&amp;gt; v0.0.0 =&amp;gt; ../module // 이런 형태로 경로를 지정해줌 </description>
    </item>
    
  </channel>
</rss>
