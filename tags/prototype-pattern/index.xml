<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>prototype pattern on icecat471&#39;s Devlog</title>
    <link>https://icecat471.github.io/devlog/tags/prototype-pattern/</link>
    <description>Recent content in prototype pattern on icecat471&#39;s Devlog</description>
    <image>
      <url>https://icecat471.github.io/devlog/papermod-cover.png</url>
      <link>https://icecat471.github.io/devlog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 17 Apr 2021 21:18:19 +0900</lastBuildDate><atom:link href="https://icecat471.github.io/devlog/tags/prototype-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[디자인패턴] Prototype 패턴</title>
      <link>https://icecat471.github.io/devlog/post/design_pattern/prototype_pattern/</link>
      <pubDate>Sat, 17 Apr 2021 21:18:19 +0900</pubDate>
      
      <guid>https://icecat471.github.io/devlog/post/design_pattern/prototype_pattern/</guid>
      <description>프로토타입 패턴 프로토타입 패턴(prototype pattern)은 생성할 객체들의 타입이 프로토타입인 인스턴스로부터 결정되도록 하며, 인스턴스는 새 객체를 만들기 위해 자신을 복제(clone)하게 된다.얕은 복사(shallow copy) vs 깊은 복사(deep copy) 얕은 복사 객체를 복사할때 참조값을 가진 멤버는 참조값만 복사 됨.
type Status struct { str int dex int wis int } type Monster struct { Name string Status *Status } func main() { slime := Monster{ &amp;#34;slime&amp;#34;, &amp;amp;Status{1,1,1}, } goblin := slime goblin.Name = &amp;#34;goblin&amp;#34; goblin.</description>
    </item>
    
  </channel>
</rss>
